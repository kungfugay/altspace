<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt"%>
<%@ taglib prefix="ftm" uri="http://java.sun.com/jsp/jstl/fmt" %>

<style>
    .list-group .list-group-item {
        cursor: pointer;
    }
    .header-text {
        font-size: 20px;
        font-weight: bold;
    }
    .review-card[style*="display:none"] {
        display: none;
    }
    .edit-reply-form { /* Initially hidden */
        display: none;
    }
    textarea {
        resize: none;
        height: 90px;
    }
</style>

<div class="container-fluid">
    <p class="text-muted mb-4 fs-6">
        Î¶¨Î∑∞ Í¥ÄÎ¶¨ &nbsp;&nbsp;>&nbsp;&nbsp; <strong>ÏûëÏÑ±Îêú Î¶¨Î∑∞ Ï°∞Ìöå</strong>
    </p>

    <small id="dataTimestamp" class="text-muted">Îç∞Ïù¥ÌÑ∞ Í∏∞Ï§ÄÏùº:</small>
    <%--Ìó§Îçî--%>
    <div class="row my-3 mx-0 bg-light rounded p-3 text-center justify-content-around">
        <div class="col p-0 border-0 rounded-2 pt-2">
            <p class="header-text">ÎàÑÏ†Å Î¶¨Î∑∞Ïàò</p>
            <p id="totalReviews">
                <span class="spinner-border text-primary"></span>
            </p>
        </div>
        <div class="col border-0 rounded-2 pt-2">
            <p class="header-text">Ìò∏Ïä§ÌåÖ ÎàÑÏ†Å ÌèâÏ†ê</p>
            <p id="averageGrade">
                <span class="spinner-border text-primary"></span>
            </p>
        </div>
        <div class="col border-0 rounded-2 pt-2">
            <p class="header-text">Ïò§Îäò Îì±Î°ùÎêú Î¶¨Î∑∞</p>
            <p id="todayReviews">
                <span class="spinner-border text-primary"></span>
            </p>
        </div>
        <div class="col border-0 rounded-2 pt-2">
            <p class="header-text">ÎãµÍ∏ÄÏùÑ Ïì∏ Ïàò ÏûàÎäî Î¶¨Î∑∞</p>
            <p id="noReplyReviews">
                <span class="spinner-border text-primary"></span>
            </p>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-3 mb-3">
            <ul class="list-group bg-light" id="accList">
                <a href="<c:url value='/review/list'/>" class="list-group-item ${param.accId == null ? 'active' : ''}" data-id="all">
                    Ï†ÑÏ≤¥Î≥¥Í∏∞
                </a>

                <c:forEach var="item" items="${accList}">
                    <a href="<c:url value='/review/list'/>?accId=${item.accommodationId}"
                       class="list-group-item ${param.accId == item.accommodationId ? 'active' : ''}"
                       data-id="${item.accommodationId}">
                            ${item.name} (${item.reviewCount})
                    </a>
                </c:forEach>
            </ul>
        </div>

        <%--ÏûëÏÑ±Ìïú Î¶¨Î∑∞ Î™©Î°ù (Ïª®ÌÖêÏ∏†)--%>
        <div class="col-sm-9 mx-auto">
            <c:if test="${empty reviewMap}">
                <div class="card mb-3">
                    <div class="card-body" style="text-align: center">
                        <p>ÏïÑÏßÅ Î¶¨Î∑∞Î•º ÎÇ®Í∏¥ Í≤åÏä§Ìä∏Í∞Ä ÏóÜÏñ¥Ïöî.</p>
                        <i class="bi bi-three-dots"></i>
                    </div>
                </div>
            </c:if>

            <%-- Review items container --%>
            <div id="reviewItemsContainer">
                <c:forEach var="rm" items="${reviewMap}" varStatus="status">
                    <div class="card mb-3 review-card" ${status.index >= 3 ? 'style="display:none;"' : ''}>
                        <div class="card-body">

                            <!-- Î¶¨Î∑∞ Ï†ïÎ≥¥ Ï∂úÎ†• -->
                            <div class="mb-2">
                                <p class="text-warning">
                                    <c:forEach var="i" begin="1" end="5">
                                        <c:choose>
                                            <c:when test="${i <= rm.review.grade}">
                                                <i class="bi bi-star-fill"></i>
                                            </c:when>
                                            <c:otherwise>
                                                <i class="bi bi-star"></i>
                                            </c:otherwise>
                                        </c:choose>
                                    </c:forEach>
                                </p>
                                <div class="d-flex align-items-center justify-content-between mb-2">
                                    <div class="float-start">
                                        <i class="fas fa-user-circle fa-2x me-2 text-secondary"></i>
                                        <span style="font-size:18px; font-weight:bold">${rm.review.guestId}</span>
                                    </div>
                                    <div class="float-end d-flex">
                                        <i class="bi bi-translate me-2"></i>
                                        <select class="form-select form-select-sm border-0"
                                                data-review-id="${rm.review.reviewId}"
                                                data-original="${rm.review.comment}">
                                            <option value="" selected disabled hidden>Ïñ∏Ïñ¥</option>
                                            <option value="ko">ÌïúÍµ≠Ïñ¥</option>
                                            <option value="en">ÏòÅÏñ¥</option>
                                            <option value="zh-CN">Ï§ëÍµ≠Ïñ¥</option>
                                            <option value="ja">ÏùºÎ≥∏Ïñ¥</option>
                                        </select>
                                    </div>
                                </div>
                                <small>[${rm.review.name}]</small>
                                <p class="review-comment-text">${rm.review.comment}</p>

                                <c:if test="${not empty rm.images}">
                                    <div class="d-flex overflow-scroll">
                                        <c:forEach var="reviewImg" items="${rm.images}">
                                            <img class="pe-2" style="height: 120px; width: auto;" src="<c:url value="/imgs/no-image-available.jpeg"/>" alt="Î¶¨Î∑∞Ïù¥ÎØ∏ÏßÄ">
                                        </c:forEach>
                                    </div>
                                </c:if>

                                <small class="text-muted">
                                    <c:choose>
                                        <c:when test="${not empty rm.review.updateDay}">
                                            <fmt:formatDate value="${rm.review.updateDay}" pattern="yyyyÎÖÑ MMÏõî ddÏùº HH:mm:ss"/> (ÏàòÏ†ïÎê®)
                                        </c:when>
                                        <c:otherwise>
                                            <fmt:formatDate value="${rm.review.createDay}" pattern="yyyyÎÖÑ MMÏõî ddÏùº HH:mm:ss"/>
                                        </c:otherwise>
                                    </c:choose>
                                </small>
                            </div>

                            <!-- ÎãµÍ∏Ä Î¶¨Ïä§Ìä∏ Ï∂úÎ†• -->
                            <hr>
                            <div class="mt-3">
                                <c:choose>
                                    <c:when test="${empty rm.reply}">
                                        <p class="text-muted">Ìò∏Ïä§Ìä∏ ÎãòÏùò ÎãµÍ∏ÄÏùÑ ÎÇ®Í≤®Ï£ºÏÑ∏Ïöî. üòç</p>
                                    </c:when>
                                    <c:otherwise>
                                        <div class="reply-list">
                                            <c:forEach var="reply" items="${rm.reply}">
                                                <div class="reply-item mb-3" data-reply-id="${reply.replyId}">
                                                    <div class="d-flex justify-content-between align-items-center mb-1">
                                                        <div class="left">
                                                            <img src="<c:url value="/imgs/avatar.png"/>" alt class="w-px-30 h-auto rounded-circle" />
                                                            <strong>${sessionScope.user.name}</strong>
                                                            <small class="ms-1 text-muted"><fmt:formatDate value="${reply.createDay}" pattern="yyyy-MM-dd HH:mm:ss"/></small>
                                                        </div>
                                                        <div class="text-muted small right">
                                                            <a href="javascript:void(0);" data-reply-id="${reply.replyId}" class="modifyReplyBtn">ÏàòÏ†ï</a>
                                                            <a href="javascript:void(0);" data-reply-id="${reply.replyId}" class="deleteReplyBtn ms-3">ÏÇ≠Ï†ú</a>
                                                        </div>
                                                    </div>
                                                    <p class="reply-comment-text">${reply.comment}</p>

                                                    <%-- ÎãµÍ∏Ä ÏàòÏ†ï Ìèº (Ï¥àÍ∏∞ÏóêÎäî Ïà®ÍπÄ) --%>
                                                    <div class="edit-reply-form">
                                                        <div class="w-100">
                                                            <textarea class="editComment form-control me-2" rows="2" required>${reply.comment}</textarea>
                                                        </div>
                                                        <div class="my-3 d-flex justify-content-evenly">
                                                            <button class="updateReplyBtn btn btn-primary text-nowrap w-100" data-reply-id="${reply.replyId}">
                                                                <small>Ï†ÄÏû•</small>
                                                            </button>
                                                            <button class="cancelEditReplyBtn btn btn-secondary ms-1 text-nowrap w-100">
                                                                <small>Ï∑®ÏÜå</small>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </c:forEach>
                                        </div>
                                    </c:otherwise>
                                </c:choose>
                            </div>

                            <!-- ÎãµÍ∏Ä ÏûëÏÑ± Ìèº -->
                            <div class="add-reply-form mt-3" data-review-id="${rm.review.reviewId}">
                                <input type="hidden" class="reviewId" value="${rm.review.reviewId}">
                                <input type="hidden" class="userId" value="${sessionScope.user.userId}">
                                <textarea class="comment form-control me-2 w-100" rows="2" required></textarea>
                                <button class="addReplyBtn btn btn-primary px-5 mt-2 text-nowrap w-100" data-review-id="${rm.review.reviewId}">
                                    <small>ÎãµÍ∏Ä Îì±Î°ù</small>
                                </button>
                            </div>

                        </div>
                    </div>
                </c:forEach>
            </div>

            <%-- ÎçîÎ≥¥Í∏∞ Î≤ÑÌäº --%>
            <c:if test="${not empty reviewMap && reviewMap.size() > 3}">
                <button id="loadMoreReviewsBtn" class="btn btn-outline-primary w-50 mx-auto my-4 d-block">ÎçîÎ≥¥Í∏∞</button>
            </c:if>
        </div>
    </div>
</div>

<script>
    const reviewPage = {
        countUpInstances: {},

        init: function () {
            // ÎãµÍ∏Ä Îì±Î°ù
            $(document).on('click', '.addReplyBtn', function () {
                let reviewId = $(this).data('review-id');
                let comment = $(this).siblings('.comment').val().trim();
                let userId = $(this).siblings('.userId').val();

                if (!userId) {
                    alert("Î°úÍ∑∏Ïù∏Ïù¥ ÌïÑÏöîÌïú Í∏∞Îä•ÏûÖÎãàÎã§.");
                    return;
                }
                if (!comment) {
                    alert("ÎãµÍ∏ÄÏùÄ Í≥µÎ∞±Ïùº Ïàò ÏóÜÏäµÎãàÎã§.");
                    return;
                }
                let replyData = { reviewId: reviewId, userId: userId, comment: comment };
                reviewPage.addReply(replyData);
            });

            // ÎãµÍ∏Ä ÏÇ≠Ï†ú
            $(document).on("click", ".deleteReplyBtn", function (e) {
                const replyId = $(this).data("reply-id");
                if (confirm("Ï†ïÎßêÎ°ú ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå?")) {
                    reviewPage.delReply(replyId);
                }
            });

            // ÏÇ¨Ïù¥ÎìúÎ∞î Ìï∏Îì§Îü¨
            $("#accList").on("click", ".list-group-item", function () {
                $("#accList").find(".list-group-item").removeClass("active");
                $(this).addClass("active");
            });

            // Î≤àÏó≠ Í∏∞Îä• Ï¥àÍ∏∞Ìôî
            $(document).on('change', '.form-select.form-select-sm', function() {
                const $select = $(this);
                const selectedLang = $select.val();
                const originalText = $select.data('original');
                const $commentParagraph = $select.closest('.card-body').find('.review-comment-text');

                if (!selectedLang) {
                    $commentParagraph.text(originalText);
                    return;
                }
                if ($commentParagraph.length) {
                    reviewPage.translate(originalText, selectedLang, $commentParagraph);
                } else {
                    console.error("Could not find comment paragraph to update.");
                }
            });

            // "Load More" reviews button handler
            $('#loadMoreReviewsBtn').on('click', function() {
                reviewPage.loadMoreReviews();
            });

            // ÎãµÍ∏Ä ÏàòÏ†ï Î≤ÑÌäº ÌÅ¥Î¶≠
            $(document).on('click', '.modifyReplyBtn', function () {
                const $replyItem = $(this).closest('.reply-item');
                const $reviewCardBody = $(this).closest('.card-body');

                // Îã§Î•∏ Ïó¥Î†§ÏûàÎäî ÏàòÏ†ï ÌèºÏù¥ ÏûàÎã§Î©¥ Îã´Í∏∞
                $('.edit-reply-form').not($replyItem.find('.edit-reply-form')).hide();
                $('.reply-comment-text').not($replyItem.find('.reply-comment-text')).show();


                // ÌòÑÏû¨ ÎãµÍ∏Ä ÎÇ¥Ïö© Ïà®Í∏∞Í∏∞ & ÏàòÏ†ï Ìèº Î≥¥Ïù¥Í∏∞
                $replyItem.find('.reply-comment-text').hide();
                $replyItem.find('.edit-reply-form').show();
                // Ìï¥Îãπ Î¶¨Î∑∞ Ïπ¥ÎìúÏùò Î©îÏù∏ ÎãµÍ∏Ä ÏûëÏÑ± Ìèº Ïà®Í∏∞Í∏∞
                $reviewCardBody.find('.add-reply-form').addClass('d-none');
            });

            // ÎãµÍ∏Ä ÏàòÏ†ï Ï∑®ÏÜå Î≤ÑÌäº ÌÅ¥Î¶≠
            $(document).on('click', '.cancelEditReplyBtn', function () {
                const $replyItem = $(this).closest('.reply-item');
                const $reviewCardBody = $(this).closest('.card-body');

                // ÏàòÏ†ï Ìèº Ïà®Í∏∞Í∏∞ & ÏõêÎûò ÎãµÍ∏Ä ÎÇ¥Ïö© Î≥¥Ïù¥Í∏∞
                $replyItem.find('.edit-reply-form').hide();
                $replyItem.find('.reply-comment-text').show();
                // Ìï¥Îãπ Î¶¨Î∑∞ Ïπ¥ÎìúÏùò Î©îÏù∏ ÎãµÍ∏Ä ÏûëÏÑ± Ìèº Î≥¥Ïù¥Í∏∞
                $reviewCardBody.find('.add-reply-form').removeClass('d-none');
            });

            // ÎãµÍ∏Ä ÏàòÏ†ï (ÏóÖÎç∞Ïù¥Ìä∏) Î≤ÑÌäº ÌÅ¥Î¶≠
            $(document).on('click', '.updateReplyBtn', function () {
                const $replyItem = $(this).closest('.reply-item');
                const replyId = $(this).data('reply-id');
                const comment = $replyItem.find('.editComment').val().trim();

                if (!comment) {
                    alert("ÎãµÍ∏ÄÏùÄ Í≥µÎ∞±Ïùº Ïàò ÏóÜÏäµÎãàÎã§.");
                    return;
                }

                let updateData = {
                    userId: "${sessionScope.user.userId}",
                    replyId: replyId,
                    comment: comment
                };
                reviewPage.updateReply(updateData, $replyItem);
            });
        },

        addReply: function (replyData) {
            $.ajax({
                url: "<c:url value='/api/review/add-reply'/>",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(replyData),
                success: function (response) {
                    location.reload();
                },
                error: function (xhr) {
                    alert('error: ' + xhr.responseText);
                }
            });
        },

        delReply: function (replyId) {
            $.ajax({
                url: "/api/review/del-reply?replyId=" + replyId,
                type: "POST",
                success: function (response) {
                    //alert(response);
                    location.reload();
                },
                error: function (xhr) {
                    console.error('error: ' + xhr.responseText);
                }
            });
        },

        updateReply: function (updateData, $replyItem) {
            $.ajax({
                url: "<c:url value='/api/review/mod-reply'/>",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(updateData),
                success: function (response) {
                    const $reviewCardBody = $replyItem.closest('.card-body');
                    // UI ÎèôÏ†Å ÏóÖÎç∞Ïù¥Ìä∏
                    $replyItem.find('.reply-comment-text').text(updateData.comment).show();
                    $replyItem.find('.edit-reply-form').hide();
                    $reviewCardBody.find('.add-reply-form').removeClass('d-none');
                },
                error: function (xhr) {
                    alert('ÎãµÍ∏Ä ÏàòÏ†ï Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + xhr.responseText);
                    // Ïò§Î•ò Î∞úÏÉù Ïãú UIÎ•º ÏõêÎûò ÏÉÅÌÉúÎ°ú ÎêòÎèåÎ¶¥ Ïàò ÏûàÏäµÎãàÎã§.
                    const $reviewCardBody = $replyItem.closest('.card-body');
                    $replyItem.find('.edit-reply-form').hide();
                    $replyItem.find('.reply-comment-text').show();
                    $reviewCardBody.find('.add-reply-form').removeClass('d-none');
                }
            });
        },

        loadDashBoardData: function () {
            $.ajax({
                url: "<c:url value='/api/review/dashboard'/>",
                type: "POST",
                data: { hostId: "${sessionScope.user.userId}" },
                success: (resp) => {
                    this.displayTimestamp();
                    $("#totalReviews").text(resp.totalReviews.count ?? 0).removeClass("placeholder-glow");
                    $("#averageGrade").text(resp.averageGrade ?? 0 ).removeClass("placeholder-glow");
                    $("#todayReviews").text(resp.todayReviews.count ?? 0).removeClass("placeholder-glow");
                    $("#noReplyReviews").text(resp.noReplyReviews.count ?? 0).removeClass("placeholder-glow");
                },
                error: (xhr) => {
                    alert('error: ' + xhr.responseText);
                    console.error(xhr.status, xhr.responseText);
                }
            });
        },

        displayTimestamp: function() {
            const now = new Date();
            const year = now.getFullYear();
            const month = String(now.getMonth() + 1).padStart(2, '0');
            const day = String(now.getDate()).padStart(2, '0');
            const hours = String(now.getHours()).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            const seconds = String(now.getSeconds()).padStart(2, '0');
            const formattedTimestamp = year + "ÎÖÑ " + month + "Ïõî " + day + "Ïùº " + hours + ":" + minutes + ":" + seconds;
            $("#dataTimestamp").text("Îç∞Ïù¥ÌÑ∞ Í∏∞Ï§ÄÏùº: " + formattedTimestamp);
        },

        translate: function(originalText, targetLang, $commentElement){
            if (!targetLang) {
                $commentElement.text(originalText);
                return;
            }
            $.ajax({
                type: 'POST',
                url: '<c:url value="/api/review/translate"/>',
                contentType: 'application/json',
                data: JSON.stringify({ msg: originalText, target: targetLang }),
                success: function (translatedText) {
                    if (translatedText && translatedText.trim() !== "") {
                        $commentElement.text(translatedText);
                    } else {
                        $commentElement.text(originalText);
                        // Ï∂úÎ∞úÏñ¥ ÎèÑÏ∞©Ïñ¥Í∞Ä Í∞ôÏïÑÏÑú Î∞õÎäî Ïò§Î•òÍ∞Ä 99% => ÏóêÎü¨ Î¨¥Ïãú
                        // alert('Î≤àÏó≠ Í≤∞Í≥ºÎ•º Î∞õÏßÄ Î™ªÌñàÏäµÎãàÎã§. ÏõêÎ≥∏ ÌÖçÏä§Ìä∏Î°ú ÌëúÏãúÎê©ÎãàÎã§.');
                    }
                },
                error: function (xhr) {
                    console.error("Translation error:", xhr.responseText);
                    alert('Î≤àÏó≠ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§: ' + xhr.responseText);
                    $commentElement.text(originalText);
                }
            });
        },

        loadMoreReviews: function() {
            const $hiddenReviews = $('.review-card:hidden');
            const reviewsToShow = 3;
            $hiddenReviews.slice(0, reviewsToShow).slideDown();
            if ($hiddenReviews.length <= reviewsToShow) {
                $('#loadMoreReviewsBtn').hide();
            }
        }
    };

    $(function () {
        reviewPage.init();
        reviewPage.loadDashBoardData();
    });
</script>